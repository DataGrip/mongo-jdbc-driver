buildscript {
    ext.kotlin_version = '1.3.72'
    repositories {
        mavenCentral()
        maven { url "https://plugins.gradle.org/m2/" }
        jcenter()
    }
    dependencies {
        classpath "gradle.plugin.install4j.install4j:gradle_plugin:7.0.8"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath 'com.github.jengelman.gradle.plugins:shadow:5.2.0'
    }
}

plugins {
    id 'org.hidetake.ssh' version '2.7.1'
    id "org.jetbrains.kotlin.jvm" version "1.3.72"
}

apply plugin: 'application'
apply plugin: 'distribution'
apply plugin: 'com.github.johnrengelman.shadow'
mainClassName = 'com.dbschema.MongoJdbcDriver'

repositories {
    mavenCentral()
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    compile "org.mongodb:mongo-java-driver:3.12.4"
    compile group: 'org.jetbrains', name: 'annotations', version: '15.0'
    compile group: 'org.apache.commons', name: 'commons-text', version: '1.8'
    compile group: 'org.graalvm.js', name: 'js', version: '20.0.0'
    compile files('libs/java-shell-0.3.jar')
    testCompile 'junit:junit:4.12'
    testCompile group: 'commons-io', name: 'commons-io', version: '2.6'
}

shadowJar {
    archiveFileName = "mongo-jdbc-standalone-${version}.jar"
    mergeServiceFiles()
}

task zip(type: Zip, dependsOn:['clean','jar']) {
    archiveName 'MongoDbJdbcDriver.zip'
    from configurations.runtime.allArtifacts.files
    from configurations.runtime
}

task copyInDbSchema(type: Copy,dependsOn:['clean','jar']) {
    from configurations.runtime.allArtifacts.files
    from configurations.runtime
    into "${project.projectDir}/../dbs-gradle/src/dist/drivers/MongoDb/"
}


remotes {
    webServer {
        host = websiteHost
        user = websiteUser
        password = websitePassword
    }
}

task uploadWeb {
    doLast {
        ssh.settings {
            knownHosts = allowAnyHosts
            fileTransfer = 'scp'
        }
        ssh.run {
            session(remotes.webServer) {
                fileTree("$buildDir/distributions").visit { FileVisitDetails details ->
                    println "Copy $details.file.path ..."
                    put from: "$details.file.path", into: 'web/jdbc-drivers'
                }
            }
        }
    }
}
