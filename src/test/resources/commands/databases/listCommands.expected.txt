|map|
|Document{{commands=Document{{_addShard=Document{{help=Internal command, which is exported by shards. Do not call directly. Adds a new shard to a cluster., slaveOk=false, adminOnly=true}}, _cloneCatalogData=Document{{help=no help defined, slaveOk=false, adminOnly=true}}, _cloneCollectionOptionsFromPrimaryShard=Document{{help=Internal command, do not call directly. Creates a collection on a shard with UUID existing on primary., slaveOk=false, adminOnly=false}}, _configsvrAddShard=Document{{help=Internal command, which is exported by the sharding config server. Do not call directly. Validates and adds a new shard to the cluster., slaveOk=false, adminOnly=true}}, _configsvrAddShardToZone=Document{{help=Internal command, which is exported by the sharding config server. Do not call directly. Validates and adds a new zone to the shard., slaveOk=false, adminOnly=true}}, _configsvrBalancerStart=Document{{help=Internal command, which is exported by the sharding config server. Do not call directly. Controls the balancer state., slaveOk=false, adminOnly=true}}, _configsvrBalancerStatus=Document{{help=Internal command, which is exported by the sharding config server. Do not call directly. Controls the balancer state., slaveOk=false, adminOnly=true}}, _configsvrBalancerStop=Document{{help=Internal command, which is exported by the sharding config server. Do not call directly. Controls the balancer state., slaveOk=false, adminOnly=true}}, _configsvrCommitChunkMerge=Document{{help=Internal command, which is sent by a shard to the sharding config server. Do not call directly. Receives, validates, and processes a MergeChunkRequest, slaveOk=false, adminOnly=true}}, _configsvrCommitChunkMigration=Document{{help=should not be calling this directly, slaveOk=false, adminOnly=true}}, _configsvrCommitChunkSplit=Document{{help=Internal command, which is sent by a shard to the sharding config server. Do not call directly. Receives, validates, and processes a SplitChunkRequest., slaveOk=false, adminOnly=true}}, _configsvrCommitMovePrimary=Document{{help=should not be calling this directly, slaveOk=false, adminOnly=true}}, _configsvrCreateCollection=Document{{help=Internal command, which is exported by the sharding config server. Do not call directly. Create a collection., slaveOk=false, adminOnly=true}}, _configsvrCreateDatabase=Document{{help=Internal command, which is exported by the sharding config server. Do not call directly. Create a database., slaveOk=false, adminOnly=true}}, _configsvrDropCollection=Document{{help=Internal command, which is exported by the sharding config server. Do not call directly. Drops a collection from a database., slaveOk=false, adminOnly=true}}, _configsvrDropDatabase=Document{{help=Internal command, which is exported by the sharding config server. Do not call directly. Drops a database., slaveOk=false, adminOnly=true}}, _configsvrEnableSharding=Document{{help=Internal command, which is exported by the sharding config server. Do not call directly. Enable sharding on a database., slaveOk=false, adminOnly=true}}, _configsvrMoveChunk=Document{{help=Internal command, which is exported by the sharding config server. Do not call directly. Requests the balancer to move or rebalance a single chunk., slaveOk=false, adminOnly=true}}, _configsvrMovePrimary=Document{{help=Internal command, which is exported by the sharding config server. Do not call directly. Reassigns the primary shard of a database., slaveOk=false, adminOnly=true}}, _configsvrRemoveShard=Document{{help=Internal command, which is exported by the sharding config server. Do not call directly. Removes a shard from the cluster., slaveOk=false, adminOnly=true}}, _configsvrRemoveShardFromZone=Document{{help=Internal command, which is exported by the sharding config server. Do not call directly. Validates and removes the shard from the zone., slaveOk=false, adminOnly=true}}, _configsvrShardCollection=Document{{help=Internal command, which is exported by the sharding config server. Do not call directly. Shards a collection. Requires key. Optional unique. Sharding must already be enabled for the database, slaveOk=false, adminOnly=true}}, _configsvrUpdateZoneKeyRange=Document{{help=Internal command, which is exported by the sharding config server. Do not call directly. Validates and assigns a new range to a zone., slaveOk=false, adminOnly=true}}, _flushDatabaseCacheUpdates=Document{{help=Internal command which waits for any pending routing table cache updates for a particular database to be written locally. The operationTime returned in the response metadata is guaranteed to be at least as late as the last routing table cache update to the local disk. Takes a 'forceRemoteRefresh' option to make this node refresh its cache from the config server before waiting for the last refresh to be persisted., slaveOk=false, adminOnly=true}}, _flushRoutingTableCacheUpdates=Document{{help=Internal command which waits for any pending routing table cache updates for a particular namespace to be written locally. The operationTime returned in the response metadata is guaranteed to be at least as late as the last routing table cache update to the local disk. Takes a 'forceRemoteRefresh' option to make this node refresh its cache from the config server before waiting for the last refresh to be persisted., slaveOk=false, adminOnly=true}}, _getNextSessionMods=Document{{help=internal, slaveOk=false, adminOnly=true}}, _getUserCacheGeneration=Document{{help=internal, slaveOk=true, adminOnly=true}}, _isSelf=Document{{help={ _isSelf : 1 } INTERNAL ONLY, slaveOk=true, adminOnly=false}}, _mergeAuthzCollections=Document{{help=Internal command used by mongorestore for updating user/role data, slaveOk=false, adminOnly=true}}, _migrateClone=Document{{help=internal, slaveOk=false, adminOnly=true}}, _movePrimary=Document{{help=should not be calling this directly, slaveOk=false, adminOnly=true}}, _recvChunkAbort=Document{{help=internal, slaveOk=false, adminOnly=true}}, _recvChunkCommit=Document{{help=internal, slaveOk=false, adminOnly=true}}, _recvChunkStart=Document{{help=internal, slaveOk=false, adminOnly=true}}, _recvChunkStatus=Document{{help=internal, slaveOk=false, adminOnly=true}}, _shardsvrShardCollection=Document{{help=should not be calling this directly, slaveOk=false, adminOnly=true}}, _transferMods=Document{{help=internal, slaveOk=false, adminOnly=true}}, abortTransaction=Document{{help=Aborts a transaction, slaveOk=false, adminOnly=true}}, aggregate=Document{{help=Runs the aggregation command. See http://dochub.mongodb.org/core/aggregation for more details., slaveOk=false, adminOnly=false, slaveOverrideOk=true}}, appendOplogNote=Document{{help=Adds a no-op entry to the oplog, slaveOk=false, adminOnly=true}}, applyOps=Document{{help=internal (sharding)
{ applyOps : [ ] , preCondition : [ { ns : ... , q : ... , res : ... } ] }, slaveOk=false, adminOnly=false}}, authenticate=Document{{help=internal, slaveOk=true, adminOnly=false}}, availableQueryOptions=Document{{help=no help defined, slaveOk=true, adminOnly=false}}, buildInfo=Document{{help=get version #, etc.
{ buildinfo:1 }, slaveOk=true, adminOnly=false}}, checkShardingIndex=Document{{help=Internal command.
, slaveOk=false, adminOnly=false}}, cleanupOrphaned=Document{{help=no help defined, slaveOk=false, adminOnly=true}}, cloneCollection=Document{{help={ cloneCollection: <collection>, from: <host> [,query: <query_filter>] [,copyIndexes:<bool>] }
Copies a collection from one server to another. Do not use on a single server as the destination is placed at the same db.collection (namespace) as the source.
, slaveOk=false, adminOnly=false}}, cloneCollectionAsCapped=Document{{help={ cloneCollectionAsCapped:<fromName>, toCollection:<toName>, size:<sizeInBytes> }, slaveOk=false, adminOnly=false}}, collMod=Document{{help=Sets collection options.
Example: { collMod: 'foo', viewOn: 'bar'} Example: { collMod: 'foo', index: {keyPattern: {a: 1}, expireAfterSeconds: 600} Example: { collMod: 'foo', index: {name: 'bar', expireAfterSeconds: 600} }
, slaveOk=false, adminOnly=false}}, collStats=Document{{help={ collStats:"blog.posts" , scale : 1 } scale divides sizes e.g. for KB use 1024
    avgObjSize - in bytes, slaveOk=true, adminOnly=false}}, commitTransaction=Document{{help=Commits a transaction, slaveOk=false, adminOnly=true}}, compact=Document{{help=compact collection
warning: this operation locks the database and is slow. you can cancel with killOp()
{ compact : <collection_name>, [force:<bool>], [validate:<bool>] }
  force - allows to run on a replica set primary
  validate - check records are noncorrupt before adding to newly compacting extents. slower but safer (defaults to true in this version)
, slaveOk=true, adminOnly=false}}, connPoolStats=Document{{help=stats about connections between servers in a replica set or sharded cluster., slaveOk=true, adminOnly=false}}, connPoolSync=Document{{help=internal, slaveOk=true, adminOnly=false}}, connectionStatus=Document{{help=Returns connection-specific information such as logged-in users and their roles, slaveOk=true, adminOnly=false}}, convertToCapped=Document{{help={ convertToCapped:<fromCollectionName>, size:<sizeInBytes> }, slaveOk=false, adminOnly=false}}, coordinateCommitTransaction=Document{{help=Coordinates the commit for a transaction. Only called by mongos., slaveOk=false, adminOnly=true}}, count=Document{{help=count objects in collection, slaveOk=false, adminOnly=false, slaveOverrideOk=true}}, create=Document{{help=explicitly creates a collection or view
{
  create: <string: collection or view name> [,
  capped: <bool: capped collection>,
  autoIndexId: <bool: automatic creation of _id index>,
  idIndex: <document: _id index specification>,
  size: <int: size in bytes of the capped collection>,
  max: <int: max number of documents in the capped collection>,
  storageEngine: <document: storage engine configuration>,
  validator: <document: validation rules>,
  validationLevel: <string: validation level>,
  validationAction: <string: validation action>,
  indexOptionDefaults: <document: default configuration for indexes>,
  viewOn: <string: name of source collection or view>,
  pipeline: <array<object>: aggregation pipeline stage>,
  collation: <document: default collation for the collection or view>,
  writeConcern: <document: write concern expression for the operation>]
}, slaveOk=false, adminOnly=false}}, createIndexes=Document{{help=no help defined, slaveOk=false, adminOnly=false}}, createRole=Document{{help=Adds a role to the system, slaveOk=false, adminOnly=false}}, createUser=Document{{help=Adds a user to the system, slaveOk=false, adminOnly=false}}, currentOp=Document{{help=no help defined, slaveOk=true, adminOnly=true}}, dataSize=Document{{help=determine data size for a set of data in a certain range
example: { dataSize:"blog.posts", keyPattern:{x:1}, min:{x:10}, max:{x:55} }
min and max parameters are optional. They must either both be included or both omitted
keyPattern is an optional parameter indicating an index pattern that would be usefulfor iterating over the min/max bounds. If keyPattern is omitted, it is inferred from the structure of min. 
note: This command may take a while to run, slaveOk=true, adminOnly=false}}, dbHash=Document{{help=no help defined, slaveOk=true, adminOnly=false}}, dbStats=Document{{help=Get stats on a database. Not instantaneous. Slower for databases with large .ns files.
Example: { dbStats:1, scale:1 }, slaveOk=true, adminOnly=false}}, delete=Document{{help=delete documents, slaveOk=false, adminOnly=false}}, distinct=Document{{help={ distinct : 'collection name' , key : 'a.b' , query : {} }, slaveOk=false, adminOnly=false, slaveOverrideOk=true}}, driverOIDTest=Document{{help=no help defined, slaveOk=true, adminOnly=false}}, drop=Document{{help=drop a collection
{drop : <collectionName>}, slaveOk=false, adminOnly=false}}, dropAllRolesFromDatabase=Document{{help=Drops all roles from the given database.  Before deleting the roles completely it must remove them from any users or other roles that reference them.  If any errors occur in the middle of that process it's possible to be left in a state where the roles have been removed from some user/roles but otherwise still exist., slaveOk=false, adminOnly=false}}, dropAllUsersFromDatabase=Document{{help=Drops all users for a single database., slaveOk=false, adminOnly=false}}, dropConnections=Document{{help=Drop egress connections to specified host and port, slaveOk=true, adminOnly=true}}, dropDatabase=Document{{help=drop (delete) this database, slaveOk=false, adminOnly=false}}, dropIndexes=Document{{help=drop indexes for a collection, slaveOk=false, adminOnly=false}}, dropRole=Document{{help=Drops a single role.  Before deleting the role completely it must remove it from any users or roles that reference it.  If any errors occur in the middle of that process it's possible to be left in a state where the role has been removed from some user/roles but otherwise still exists., slaveOk=false, adminOnly=false}}, dropUser=Document{{help=Drops a single user., slaveOk=false, adminOnly=false}}, endSessions=Document{{help=end a set of logical sessions, slaveOk=true, adminOnly=false}}, explain=Document{{help=explain database reads and writes, slaveOk=false, adminOnly=false, slaveOverrideOk=true}}, features=Document{{help=return build level feature settings, slaveOk=true, adminOnly=false}}, filemd5=Document{{help= example: { filemd5 : ObjectId(aaaaaaa) , root : "fs" }, slaveOk=true, adminOnly=false}}, find=Document{{help=query for documents, slaveOk=false, adminOnly=false, slaveOverrideOk=true}}, findAndModify=Document{{help={ findAndModify: "collection", query: {processed:false}, update: {$set: {processed:true}}, new: true}
{ findAndModify: "collection", query: {processed:false}, remove: true, sort: {priority:-1}}
Either update or remove is required, all other fields have default values.
Output is in the "value" field
, slaveOk=false, adminOnly=false}}, flushRouterConfig=Document{{help=Flushes the cached routing information for a single collection, entire database (and its collections) or all databases, which would cause full reload from the config server on the next access.
Usage:
{flushRouterConfig: 1} flushes all databases
{flushRouterConfig: 'db'} flushes only the given database (and its collections)
{flushRouterconfig: 'db.coll'} flushes only the given collection, slaveOk=true, adminOnly=true}}, fsync=Document{{help=http://dochub.mongodb.org/core/fsynccommand, slaveOk=true, adminOnly=true}}, fsyncUnlock=Document{{help=no help defined, slaveOk=true, adminOnly=true}}, geoSearch=Document{{help=no help defined, slaveOk=true, adminOnly=false}}, getCmdLineOpts=Document{{help=get argv, slaveOk=true, adminOnly=true}}, getDatabaseVersion=Document{{help= example: { getDatabaseVersion : 'foo'  } , slaveOk=true, adminOnly=true}}, getDiagnosticData=Document{{help=get latest diagnostic data collection snapshot, slaveOk=true, adminOnly=true}}, getFreeMonitoringStatus=Document{{help=Indicates free monitoring status, slaveOk=true, adminOnly=true}}, getLastError=Document{{help=return error status of the last operation on this connection
options:
  { fsync:true } - fsync before returning, or wait for journal commit if running with --journal
  { j:true } - wait for journal commit if running with --journal
  { w:n } - await replication to n servers (including self) before returning
  { w:'majority' } - await replication to majority of set
  { wtimeout:m} - timeout for w in m milliseconds, slaveOk=true, adminOnly=false}}, getLog=Document{{help={ getLog : '*' }  OR { getLog : 'global' }, slaveOk=true, adminOnly=true}}, getMore=Document{{help=retrieve more results from an existing cursor, slaveOk=true, adminOnly=false}}, getParameter=Document{{help=get administrative option(s)
example:
{ getParameter:1, notablescan:1 }
supported:
  AlwaysRecordTraffic
  KeysRotationIntervalSec
  ShardingTaskExecutorPoolHostTimeoutMS
  ShardingTaskExecutorPoolMaxConnecting
  ShardingTaskExecutorPoolMaxSize
  ShardingTaskExecutorPoolMinSize
  ShardingTaskExecutorPoolRefreshRequirementMS
  ShardingTaskExecutorPoolRefreshTimeoutMS
  TransactionRecordMinimumLifetimeMinutes
  adaptiveServiceExecutorIdlePctThreshold
  adaptiveServiceExecutorMaxQueueLatencyMicros
  adaptiveServiceExecutorRecursionLimit
  adaptiveServiceExecutorReservedThreads
  adaptiveServiceExecutorRunTimeJitterMillis
  adaptiveServiceExecutorRunTimeMillis
  adaptiveServiceExecutorStuckThreadTimeoutMillis
  allowSecondaryReadsDuringBatchApplication
  authSchemaVersion
  authenticationMechanisms
  authorizationManagerCacheSize
  authorizationManagerPinnedUsers
  authorizationManagerPinnedUsersRefreshIntervalMillis
  automationServiceDescriptor
  bgSyncOplogFetcherBatchSize
  clientCursorMonitorFrequencySecs
  cloudFreeMonitoringEndpointURL
  clusterAuthMode
  collectionClonerBatchSize
  collectionClonerUsesExhaust
  connPoolMaxConnsPerHost
  connPoolMaxInUseConnsPerHost
  connPoolMaxShardedConnsPerHost
  connPoolMaxShardedInUseConnsPerHost
  createRollbackDataFiles
  cursorTimeoutMillis
  decreaseHistoryIfNotNeededPeriodSeconds
  diagnosticDataCollectionDirectoryPath
  diagnosticDataCollectionDirectorySizeMB
  diagnosticDataCollectionEnabled
  diagnosticDataCollectionFileSizeMB
  diagnosticDataCollectionPeriodMillis
  diagnosticDataCollectionSamplesPerChunk
  diagnosticDataCollectionSamplesPerInterimUpdate
  disableJavaScriptJIT
  disableLogicalSessionCacheRefresh
  disableNonSSLConnectionLogging
  disableNonTLSConnectionLogging
  disabledSecureAllocatorDomains
  enableElectionHandoff
  enableFlowControl
  enableHybridIndexBuilds
  enableIndexBuildsCoordinatorForCreateIndexesCommand
  enableLocalhostAuthBypass
  enableTestCommands
  failIndexKeyTooLong
  featureCompatibilityVersion
  flowControlDecayConstant
  flowControlFudgeFactor
  flowControlMaxSamples
  flowControlMinTicketsPerSecond
  flowControlSamplePeriod
  flowControlTargetLagSeconds
  flowControlThresholdLagPercentage
  flowControlTicketAdderConstant
  flowControlTicketMultiplierConstant
  flowControlWarnThresholdSeconds
  forceRollbackViaRefetch
  globalConnPoolIdleTimeoutMinutes
  heapProfilingEnabled
  heapProfilingSampleIntervalBytes
  honorSystemUmask
  initialSyncOplogBuffer
  initialSyncOplogBufferPeekCacheSize
  initialSyncOplogFetcherBatchSize
  internalDocumentSourceCursorBatchSizeBytes
  internalDocumentSourceGroupMaxMemoryBytes
  internalDocumentSourceLookupCacheSizeBytes
  internalDocumentSourceSortMaxBlockingSortBytes
  internalGeoNearQuery2DMaxCoveringCells
  internalGeoPredicateQuery2DMaxCoveringCells
  internalInsertMaxBatchSize
  internalLookupStageIntermediateDocumentMaxSizeBytes
  internalProhibitShardOperationRetry
  internalQueryAllowShardedLookup
  internalQueryAlwaysMergeOnPrimaryShard
  internalQueryCacheDisableInactiveEntries
  internalQueryCacheEvictionRatio
  internalQueryCacheFeedbacksStored
  internalQueryCacheListPlansNewOutput
  internalQueryCacheSize
  internalQueryCacheWorksGrowthCoefficient
  internalQueryDisableExchange
  internalQueryEnumerationMaxIntersectPerAnd
  internalQueryEnumerationMaxOrSolutions
  internalQueryExecMaxBlockingSortBytes
  internalQueryExecYieldIterations
  internalQueryExecYieldPeriodMS
  internalQueryFacetBufferSizeBytes
  internalQueryForceIntersectionPlans
  internalQueryIgnoreUnknownJSONSchemaKeywords
  internalQueryMaxScansToExplode
  internalQueryPlanEvaluationCollFraction
  internalQueryPlanEvaluationMaxResults
  internalQueryPlanEvaluationWorks
  internalQueryPlanOrChildrenIndependently
  internalQueryPlannerEnableHashIntersection
  internalQueryPlannerEnableIndexIntersection
  internalQueryPlannerGenerateCoveredWholeIndexScans
  internalQueryPlannerMaxIndexedSolutions
  internalQueryProhibitBlockingMergeOnMongoS
  internalQueryProhibitMergingOnMongoS
  internalQueryS2GeoCoarsestLevel
  internalQueryS2GeoFinestLevel
  internalQueryS2GeoMaxCells
  internalValidateFeaturesAsMaster
  javascriptProtection
  journalCommitInterval
  jsHeapLimitMB
  localLogicalSessionTimeoutMinutes
  logComponentVerbosity
  logLevel
  logicalSessionRefreshMillis
  maxAcceptableLogicalClockDriftSecs
  maxBSONDepth
  maxIndexBuildDrainBatchSize
  maxIndexBuildDrainMemoryUsageMegabytes
  maxIndexBuildMemoryUsageMegabytes
  maxLogSizeKB
  maxNumberOfTransactionOperationsInSingleOplogEntry
  maxSessions
  maxSyncSourceLagSecs
  maxTargetSnapshotHistoryWindowInSeconds
  maxTransactionLockRequestTimeoutMillis
  migrateCloneInsertionBatchDelayMS
  migrateCloneInsertionBatchSize
  migrationLockAcquisitionMaxWaitMS
  minMillisBetweenSnapshotWindowInc
  notablescan
  numInitialSyncAttempts
  numInitialSyncCollectionCountAttempts
  numInitialSyncCollectionFindAttempts
  numInitialSyncConnectAttempts
  numInitialSyncListCollectionsAttempts
  numInitialSyncListDatabasesAttempts
  numInitialSyncListIndexesAttempts
  numInitialSyncOplogFindAttempts
  opensslCipherConfig
  opensslDiffieHellmanParameters
  oplogFetcherInitialSyncMaxFetcherRestarts
  oplogFetcherSteadyStateMaxFetcherRestarts
  oplogInitialFindMaxSeconds
  oplogRetriedFindMaxSeconds
  orphanCleanupDelaySecs
  periodicNoopIntervalSecs
  priorityTakeoverFreshnessWindowSeconds
  quiet
  rangeDeleterBatchDelayMS
  rangeDeleterBatchSize
  recoverFromOplogAsStandalone
  replBatchLimitBytes
  replBatchLimitOperations
  replElectionTimeoutOffsetLimitFraction
  replWriterThreadCount
  reportOpWriteConcernCountersInServerStatus
  reservedServiceExecutorRecursionLimit
  roleGraphInvalidationIsFatal
  rollbackRemoteOplogQueryBatchSize
  rollbackTimeLimitSecs
  saslHostName
  saslServiceName
  saslauthdPath
  scramIterationCount
  scramSHA256IterationCount
  scriptingEngineInterruptIntervalMS
  shardedConnPoolIdleTimeoutMinutes
  skipCorruptDocumentsWhenCloning
  skipShardingConfigurationChecks
  snapshotWindowAdditiveIncreaseSeconds
  snapshotWindowMultiplicativeDecrease
  sslMode
  sslWithholdClientCertificate
  startupAuthSchemaValidation
  suppressNoTLSPeerCertificateWarning
  syncdelay
  synchronousServiceExecutorRecursionLimit
  takeUnstableCheckpointOnShutdown
  taskExecutorPoolSize
  tcmallocAggressiveMemoryDecommit
  tcmallocEnableMarkThreadTemporarilyIdle
  tcmallocMaxTotalThreadCacheBytes
  testingSnapshotBehaviorInIsolation
  tlsMode
  tlsWithholdClientCertificate
  tlsX509ClusterAuthDNOverride
  traceExceptions
  traceWriteConflictExceptions
  trafficRecordingDirectory
  transactionLifetimeLimitSeconds
  transactionSizeLimitBytes
  ttlMonitorEnabled
  ttlMonitorSleepSecs
  useMultipleOplogEntryFormatForTransactions
  useReadOnceCursorsForIndexBuilds
  waitForSecondaryBeforeNoopWriteMS
  waitForStepDownOnNonCommandShutdown
  watchdogPeriodSeconds
  wiredTigerConcurrentReadTransactions
  wiredTigerConcurrentWriteTransactions
  wiredTigerCursorCacheSize
  wiredTigerEngineRuntimeConfig
  wiredTigerSessionCloseIdleTimeSecs
  writePeriodicNoops
{ getParameter:'*' } to get everything
, slaveOk=true, adminOnly=true}}, getShardMap=Document{{help=lists the set of shards known to this instance, slaveOk=true, adminOnly=true}}, getShardVersion=Document{{help= example: { getShardVersion : 'alleyinsider.foo'  } , slaveOk=true, adminOnly=true}}, getnonce=Document{{help=internal, slaveOk=true, adminOnly=false}}, grantPrivilegesToRole=Document{{help=Grants privileges to a role, slaveOk=false, adminOnly=false}}, grantRolesToRole=Document{{help=Grants roles to another role., slaveOk=false, adminOnly=false}}, grantRolesToUser=Document{{help=Grants roles to a user., slaveOk=false, adminOnly=false}}, hostInfo=Document{{help=returns information about the daemon's host, slaveOk=true, adminOnly=false}}, insert=Document{{help=insert documents, slaveOk=false, adminOnly=false}}, invalidateUserCache=Document{{help=Invalidates the in-memory cache of user information, slaveOk=true, adminOnly=true}}, isMaster=Document{{help=Check if this server is primary for a replica set
{ isMaster : 1 }, slaveOk=true, adminOnly=false}}, killAllSessions=Document{{help=kill all logical sessions, for a user, and their operations, slaveOk=true, adminOnly=false}}, killAllSessionsByPattern=Document{{help=kill logical sessions by pattern, slaveOk=true, adminOnly=false}}, killCursors=Document{{help=kill a list of cursor ids, slaveOk=true, adminOnly=false}}, killOp=Document{{help=no help defined, slaveOk=true, adminOnly=true}}, killSessions=Document{{help=kill a logical session and its operations, slaveOk=true, adminOnly=false}}, listCollections=Document{{help=list collections for this db, slaveOk=false, adminOnly=false, slaveOverrideOk=true}}, listCommands=Document{{help=get a list of all db commands, slaveOk=true, adminOnly=false}}, listDatabases=Document{{help={ listDatabases:1, [filter: <filterObject>] [, nameOnly: true ] }
list databases on this server, slaveOk=false, adminOnly=true, slaveOverrideOk=true}}, listIndexes=Document{{help=list indexes for a collection, slaveOk=false, adminOnly=false, slaveOverrideOk=true}}, lockInfo=Document{{help=show all lock info on the server, slaveOk=true, adminOnly=true}}, logRotate=Document{{help=no help defined, slaveOk=true, adminOnly=true}}, logout=Document{{help=de-authenticate, slaveOk=true, adminOnly=false}}, mapReduce=Document{{help=Run a map/reduce operation on the server.
Note this is used for aggregation, not querying, in MongoDB.
http://dochub.mongodb.org/core/mapreduce, slaveOk=true, adminOnly=false}}, mapreduce.shardedfinish=Document{{help=internal, slaveOk=true, adminOnly=false}}, mergeChunks=Document{{help=Internal command to merge a contiguous range of chunks.
Usage: { mergeChunks: <ns>, epoch: <epoch>, bounds: [<min key>, <max key>] }, slaveOk=false, adminOnly=true}}, moveChunk=Document{{help=should not be calling this directly, slaveOk=false, adminOnly=true}}, ping=Document{{help=a way to check that the server is alive. responds immediately even if server is in a db lock., slaveOk=true, adminOnly=false}}, planCacheClear=Document{{help=Drops one or all cached queries in a collection., slaveOk=false, adminOnly=false, slaveOverrideOk=true}}, planCacheClearFilters=Document{{help=Clears index filter for a single query shape or, if the query shape is omitted, all filters for the collection., slaveOk=false, adminOnly=false, slaveOverrideOk=true}}, planCacheListFilters=Document{{help=Displays index filters for all query shapes in a collection., slaveOk=false, adminOnly=false, slaveOverrideOk=true}}, planCacheListPlans=Document{{help=Displays the cached plans for a query shape., slaveOk=false, adminOnly=false, slaveOverrideOk=true}}, planCacheListQueryShapes=Document{{help=Displays all query shapes in a collection., slaveOk=false, adminOnly=false, slaveOverrideOk=true}}, planCacheSetFilter=Document{{help=Sets index filter for a query shape. Overrides existing filter., slaveOk=false, adminOnly=false, slaveOverrideOk=true}}, prepareTransaction=Document{{help=Prepares a transaction on this shard; sent by a router or re-sent by the transaction commit coordinator for a cross-shard transaction, slaveOk=false, adminOnly=true}}, profile=Document{{help=controls the behaviour of the performance profiler, the fraction of eligible operations which are sampled for logging/profiling, and the threshold duration at which ops become eligible. See http://docs.mongodb.org/manual/reference/command/profile, slaveOk=true, adminOnly=false}}, reIndex=Document{{help=re-index a collection, slaveOk=true, adminOnly=false}}, refreshSessions=Document{{help=renew a set of logical sessions, slaveOk=true, adminOnly=false}}, renameCollection=Document{{help= example: { renameCollection: foo.a, to: bar.b }, slaveOk=false, adminOnly=true}}, repairCursor=Document{{help=no help defined, slaveOk=true, adminOnly=false}}, repairDatabase=Document{{help=This command has been removed. If you would like to compact your data, use the 'compact' command. If you would like to rebuild indexes, use the 'reIndex' command. If you need to recover data, please see the documentation for repairing your database offline: http://dochub.mongodb.org/core/repair, slaveOk=true, adminOnly=false}}, replSetAbortPrimaryCatchUp=Document{{help={ CmdReplSetAbortPrimaryCatchUp : 1 }
Abort primary catch-up mode; immediately finish the transition to primary without fetching any further unreplicated writes from any other online nodes, slaveOk=true, adminOnly=true}}, replSetFreeze=Document{{help={ replSetFreeze : <seconds> }
'freeze' state of member to the extent we can do that.  What this really means is that
this node will not attempt to become primary until the time period specified expires.
You can call again with {replSetFreeze:0} to unfreeze sooner.
A process restart unfreezes the member also.
http://dochub.mongodb.org/core/replicasetcommands, slaveOk=true, adminOnly=true}}, replSetGetConfig=Document{{help=Returns the current replica set configuration{ replSetGetConfig : 1 }
http://dochub.mongodb.org/core/replicasetcommands, slaveOk=true, adminOnly=true}}, replSetGetRBID=Document{{help=no help defined, slaveOk=true, adminOnly=true}}, replSetGetStatus=Document{{help=Report status of a replica set from the POV of this server
{ replSetGetStatus : 1 }
http://dochub.mongodb.org/core/replicasetcommands, slaveOk=true, adminOnly=true}}, replSetHeartbeat=Document{{help=no help defined, slaveOk=true, adminOnly=true}}, replSetInitiate=Document{{help=Initiate/christen a replica set.
http://dochub.mongodb.org/core/replicasetcommands, slaveOk=true, adminOnly=true}}, replSetMaintenance=Document{{help={ replSetMaintenance : bool }
Enable or disable maintenance mode., slaveOk=true, adminOnly=true}}, replSetReconfig=Document{{help=Adjust configuration of a replica set
{ replSetReconfig : config_object }
http://dochub.mongodb.org/core/replicasetcommands, slaveOk=true, adminOnly=true}}, replSetRequestVotes=Document{{help=no help defined, slaveOk=true, adminOnly=true}}, replSetResizeOplog=Document{{help=resize oplog size in MB, slaveOk=true, adminOnly=true}}, replSetStepDown=Document{{help={ replSetStepDown : <seconds> }
Step down as primary.  Will not try to reelect self for the specified time period (1 minute if no numeric secs value specified, or secs is 0).
(If another member with same priority takes over in the meantime, it will stay primary.)
http://dochub.mongodb.org/core/replicasetcommands, slaveOk=true, adminOnly=true}}, replSetStepUp=Document{{help=no help defined, slaveOk=true, adminOnly=true}}, replSetSyncFrom=Document{{help={ replSetSyncFrom : "host:port" }
Change who this member is syncing from. Note: This will interrupt and restart an in-progress initial sync., slaveOk=true, adminOnly=true}}, replSetUpdatePosition=Document{{help=no help defined, slaveOk=true, adminOnly=true}}, resetError=Document{{help=reset error state, slaveOk=true, adminOnly=false}}, revokePrivilegesFromRole=Document{{help=Revokes privileges from a role, slaveOk=false, adminOnly=false}}, revokeRolesFromRole=Document{{help=Revokes roles from another role., slaveOk=false, adminOnly=false}}, revokeRolesFromUser=Document{{help=Revokes roles from a user., slaveOk=false, adminOnly=false}}, rolesInfo=Document{{help=Returns information about roles., slaveOk=false, adminOnly=false, slaveOverrideOk=true}}, saslContinue=Document{{help=Subsequent steps in a SASL authentication conversation., slaveOk=true, adminOnly=false}}, saslStart=Document{{help=First step in a SASL authentication conversation., slaveOk=true, adminOnly=false}}, serverStatus=Document{{help=returns lots of administrative server statistics, slaveOk=true, adminOnly=false}}, setFeatureCompatibilityVersion=Document{{help=Set the API version exposed by this node. If set to "4.0", then 4.2 features are disabled. If "4.2", then 4.2 features are enabled, and all nodes in the cluster must be binary version 4.2. See http://dochub.mongodb.org/core/4.0-feature-compatibility., slaveOk=false, adminOnly=true}}, setFreeMonitoring=Document{{help=enable or disable Free Monitoring, slaveOk=false, adminOnly=true}}, setIndexCommitQuorum=Document{{help=Resets the commitQuorum for the given index builds in a collection. Usage:
{
    setIndexCommitQuorum: <string> collection name,
    indexNames: array<string> list of index names,
    commitQuorum: <string|number|object> option to define the required quorum for
                  the index builds to commit
}, slaveOk=false, adminOnly=false}}, setParameter=Document{{help=set administrative option(s)
{ setParameter:1, <param>:<value> }
supported:
  AlwaysRecordTraffic
  KeysRotationIntervalSec
  ShardingTaskExecutorPoolHostTimeoutMS
  ShardingTaskExecutorPoolMaxConnecting
  ShardingTaskExecutorPoolMaxSize
  ShardingTaskExecutorPoolMinSize
  ShardingTaskExecutorPoolRefreshRequirementMS
  ShardingTaskExecutorPoolRefreshTimeoutMS
  TransactionRecordMinimumLifetimeMinutes
  adaptiveServiceExecutorIdlePctThreshold
  adaptiveServiceExecutorMaxQueueLatencyMicros
  adaptiveServiceExecutorRecursionLimit
  adaptiveServiceExecutorReservedThreads
  adaptiveServiceExecutorRunTimeJitterMillis
  adaptiveServiceExecutorRunTimeMillis
  adaptiveServiceExecutorStuckThreadTimeoutMillis
  allowSecondaryReadsDuringBatchApplication
  authSchemaVersion
  authenticationMechanisms
  authorizationManagerCacheSize
  authorizationManagerPinnedUsers
  authorizationManagerPinnedUsersRefreshIntervalMillis
  automationServiceDescriptor
  bgSyncOplogFetcherBatchSize
  clientCursorMonitorFrequencySecs
  cloudFreeMonitoringEndpointURL
  clusterAuthMode
  collectionClonerBatchSize
  collectionClonerUsesExhaust
  connPoolMaxConnsPerHost
  connPoolMaxInUseConnsPerHost
  connPoolMaxShardedConnsPerHost
  connPoolMaxShardedInUseConnsPerHost
  createRollbackDataFiles
  cursorTimeoutMillis
  decreaseHistoryIfNotNeededPeriodSeconds
  diagnosticDataCollectionDirectoryPath
  diagnosticDataCollectionDirectorySizeMB
  diagnosticDataCollectionEnabled
  diagnosticDataCollectionFileSizeMB
  diagnosticDataCollectionPeriodMillis
  diagnosticDataCollectionSamplesPerChunk
  diagnosticDataCollectionSamplesPerInterimUpdate
  disableJavaScriptJIT
  disableLogicalSessionCacheRefresh
  disableNonSSLConnectionLogging
  disableNonTLSConnectionLogging
  disabledSecureAllocatorDomains
  enableElectionHandoff
  enableFlowControl
  enableHybridIndexBuilds
  enableIndexBuildsCoordinatorForCreateIndexesCommand
  enableLocalhostAuthBypass
  enableTestCommands
  failIndexKeyTooLong
  featureCompatibilityVersion
  flowControlDecayConstant
  flowControlFudgeFactor
  flowControlMaxSamples
  flowControlMinTicketsPerSecond
  flowControlSamplePeriod
  flowControlTargetLagSeconds
  flowControlThresholdLagPercentage
  flowControlTicketAdderConstant
  flowControlTicketMultiplierConstant
  flowControlWarnThresholdSeconds
  forceRollbackViaRefetch
  globalConnPoolIdleTimeoutMinutes
  heapProfilingEnabled
  heapProfilingSampleIntervalBytes
  honorSystemUmask
  initialSyncOplogBuffer
  initialSyncOplogBufferPeekCacheSize
  initialSyncOplogFetcherBatchSize
  internalDocumentSourceCursorBatchSizeBytes
  internalDocumentSourceGroupMaxMemoryBytes
  internalDocumentSourceLookupCacheSizeBytes
  internalDocumentSourceSortMaxBlockingSortBytes
  internalGeoNearQuery2DMaxCoveringCells
  internalGeoPredicateQuery2DMaxCoveringCells
  internalInsertMaxBatchSize
  internalLookupStageIntermediateDocumentMaxSizeBytes
  internalProhibitShardOperationRetry
  internalQueryAllowShardedLookup
  internalQueryAlwaysMergeOnPrimaryShard
  internalQueryCacheDisableInactiveEntries
  internalQueryCacheEvictionRatio
  internalQueryCacheFeedbacksStored
  internalQueryCacheListPlansNewOutput
  internalQueryCacheSize
  internalQueryCacheWorksGrowthCoefficient
  internalQueryDisableExchange
  internalQueryEnumerationMaxIntersectPerAnd
  internalQueryEnumerationMaxOrSolutions
  internalQueryExecMaxBlockingSortBytes
  internalQueryExecYieldIterations
  internalQueryExecYieldPeriodMS
  internalQueryFacetBufferSizeBytes
  internalQueryForceIntersectionPlans
  internalQueryIgnoreUnknownJSONSchemaKeywords
  internalQueryMaxScansToExplode
  internalQueryPlanEvaluationCollFraction
  internalQueryPlanEvaluationMaxResults
  internalQueryPlanEvaluationWorks
  internalQueryPlanOrChildrenIndependently
  internalQueryPlannerEnableHashIntersection
  internalQueryPlannerEnableIndexIntersection
  internalQueryPlannerGenerateCoveredWholeIndexScans
  internalQueryPlannerMaxIndexedSolutions
  internalQueryProhibitBlockingMergeOnMongoS
  internalQueryProhibitMergingOnMongoS
  internalQueryS2GeoCoarsestLevel
  internalQueryS2GeoFinestLevel
  internalQueryS2GeoMaxCells
  internalValidateFeaturesAsMaster
  javascriptProtection
  journalCommitInterval
  jsHeapLimitMB
  localLogicalSessionTimeoutMinutes
  logComponentVerbosity
  logLevel
  logicalSessionRefreshMillis
  maxAcceptableLogicalClockDriftSecs
  maxBSONDepth
  maxIndexBuildDrainBatchSize
  maxIndexBuildDrainMemoryUsageMegabytes
  maxIndexBuildMemoryUsageMegabytes
  maxLogSizeKB
  maxNumberOfTransactionOperationsInSingleOplogEntry
  maxSessions
  maxSyncSourceLagSecs
  maxTargetSnapshotHistoryWindowInSeconds
  maxTransactionLockRequestTimeoutMillis
  migrateCloneInsertionBatchDelayMS
  migrateCloneInsertionBatchSize
  migrationLockAcquisitionMaxWaitMS
  minMillisBetweenSnapshotWindowInc
  notablescan
  numInitialSyncAttempts
  numInitialSyncCollectionCountAttempts
  numInitialSyncCollectionFindAttempts
  numInitialSyncConnectAttempts
  numInitialSyncListCollectionsAttempts
  numInitialSyncListDatabasesAttempts
  numInitialSyncListIndexesAttempts
  numInitialSyncOplogFindAttempts
  opensslCipherConfig
  opensslDiffieHellmanParameters
  oplogFetcherInitialSyncMaxFetcherRestarts
  oplogFetcherSteadyStateMaxFetcherRestarts
  oplogInitialFindMaxSeconds
  oplogRetriedFindMaxSeconds
  orphanCleanupDelaySecs
  periodicNoopIntervalSecs
  priorityTakeoverFreshnessWindowSeconds
  quiet
  rangeDeleterBatchDelayMS
  rangeDeleterBatchSize
  recoverFromOplogAsStandalone
  replBatchLimitBytes
  replBatchLimitOperations
  replElectionTimeoutOffsetLimitFraction
  replWriterThreadCount
  reportOpWriteConcernCountersInServerStatus
  reservedServiceExecutorRecursionLimit
  roleGraphInvalidationIsFatal
  rollbackRemoteOplogQueryBatchSize
  rollbackTimeLimitSecs
  saslHostName
  saslServiceName
  saslauthdPath
  scramIterationCount
  scramSHA256IterationCount
  scriptingEngineInterruptIntervalMS
  shardedConnPoolIdleTimeoutMinutes
  skipCorruptDocumentsWhenCloning
  skipShardingConfigurationChecks
  snapshotWindowAdditiveIncreaseSeconds
  snapshotWindowMultiplicativeDecrease
  sslMode
  sslWithholdClientCertificate
  startupAuthSchemaValidation
  suppressNoTLSPeerCertificateWarning
  syncdelay
  synchronousServiceExecutorRecursionLimit
  takeUnstableCheckpointOnShutdown
  taskExecutorPoolSize
  tcmallocAggressiveMemoryDecommit
  tcmallocEnableMarkThreadTemporarilyIdle
  tcmallocMaxTotalThreadCacheBytes
  testingSnapshotBehaviorInIsolation
  tlsMode
  tlsWithholdClientCertificate
  tlsX509ClusterAuthDNOverride
  traceExceptions
  traceWriteConflictExceptions
  trafficRecordingDirectory
  transactionLifetimeLimitSeconds
  transactionSizeLimitBytes
  ttlMonitorEnabled
  ttlMonitorSleepSecs
  useMultipleOplogEntryFormatForTransactions
  useReadOnceCursorsForIndexBuilds
  waitForSecondaryBeforeNoopWriteMS
  waitForStepDownOnNonCommandShutdown
  watchdogPeriodSeconds
  wiredTigerConcurrentReadTransactions
  wiredTigerConcurrentWriteTransactions
  wiredTigerCursorCacheSize
  wiredTigerEngineRuntimeConfig
  wiredTigerSessionCloseIdleTimeSecs
  writePeriodicNoops
, slaveOk=true, adminOnly=true}}, setShardVersion=Document{{help=internal, slaveOk=true, adminOnly=true}}, shardConnPoolStats=Document{{help=stats about the shard connection pool, slaveOk=true, adminOnly=false}}, shardingState=Document{{help=no help defined, slaveOk=true, adminOnly=true}}, shutdown=Document{{help=shutdown the database.  must be ran against admin db and either (1) ran from localhost or (2) authenticated. If this is a primary in a replica set and there is no member within 10 seconds of its optime, it will not shutdown without force : true.  You can also specify timeoutSecs : N to wait N seconds for other members to catch up., slaveOk=true, adminOnly=true}}, splitChunk=Document{{help=internal command usage only
example:
 { splitChunk:"db.foo" , keyPattern: {a:1} , min : {a:100} , max: {a:200} { splitKeys : [ {a:150} , ... ]}, slaveOk=false, adminOnly=true}}, splitVector=Document{{help=Internal command.
examples:
  { splitVector : "blog.post" , keyPattern:{x:1} , min:{x:10} , max:{x:20}, maxChunkSize:200 }
  maxChunkSize unit in MBs
  May optionally specify 'maxSplitPoints' and 'maxChunkObjects' to avoid traversing the whole chunk
  
  { splitVector : "blog.post" , keyPattern:{x:1} , min:{x:10} , max:{x:20}, force: true }
  'force' will produce one split point even if data is small; defaults to false
NOTE: This command may take a while to run, slaveOk=false, adminOnly=false}}, startRecordingTraffic=Document{{help=no help defined, slaveOk=true, adminOnly=false}}, startSession=Document{{help=start a logical session, slaveOk=true, adminOnly=false}}, stopRecordingTraffic=Document{{help=no help defined, slaveOk=true, adminOnly=false}}, top=Document{{help=usage by collection, in micros , slaveOk=true, adminOnly=true}}, touch=Document{{help=touch collection
Page in all pages of memory containing every extent for the given collection
{ touch : <collection_name>, [data : true] , [index : true] }
 at least one of data or index must be true; default is both are false
, slaveOk=true, adminOnly=false}}, twoPhaseCreateIndexes=Document{{help=no help defined, slaveOk=false, adminOnly=false}}, unsetSharding=Document{{help=internal, slaveOk=true, adminOnly=true}}, update=Document{{help=update documents, slaveOk=false, adminOnly=false}}, updateRole=Document{{help=Used to update a role, slaveOk=false, adminOnly=false}}, updateUser=Document{{help=Used to update a user, for example to change its password, slaveOk=false, adminOnly=false}}, usersInfo=Document{{help=Returns information about users., slaveOk=false, adminOnly=false, slaveOverrideOk=true}}, validate=Document{{help=Validate contents of a namespace by scanning its data structures for correctness.  Slow.
Add full:true option to do a more thorough check
Add scandata:false to skip the scan of the collection data without skipping scans of any indexes, slaveOk=true, adminOnly=false}}, voteCommitIndexBuild=Document{{help=Internal intra replica set command, slaveOk=false, adminOnly=true}}, whatsmyuri=Document{{help={whatsmyuri:1}, slaveOk=true, adminOnly=false}}}}, ok=1.0}}|